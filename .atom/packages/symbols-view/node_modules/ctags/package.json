{
  "name": "ctags",
  "description": "A package for reading source code tag files",
  "version": "0.10.0",
  "keywords": [
    "tags",
    "etags"
  ],
  "author": {
    "name": "Kevin Sawicki",
    "email": "kevin@github.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/atom/node-ctags/raw/master/LICENSE.md"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/atom/node-ctags.git"
  },
  "bugs": {
    "url": "https://github.com/atom/node-ctags/issues"
  },
  "homepage": "http://atom.github.io/node-ctags",
  "main": "./lib/ctags.js",
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-coffee": "~0.9.0",
    "grunt-shell": "~0.2.1",
    "grunt-cli": "~0.1.6",
    "node-gyp": "~0.8.5",
    "jasmine-focused": "1.x",
    "grunt-coffeelint": "0.0.6",
    "rimraf": "~2.1.4",
    "node-cpplint": "0.1.5"
  },
  "dependencies": {
    "nan": "0.8.0",
    "bindings": "~1.0.0",
    "event-stream": "~3.1.0"
  },
  "scripts": {
    "prepublish": "grunt prepublish",
    "test": "grunt test",
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "# Ctags Node module [![Build Status](https://travis-ci.org/atom/node-ctags.png)](https://travis-ci.org/atom/node-ctags)\n\nRead all about ctags [here](http://ctags.sourceforge.net/).\n\n## Installing\n\n```sh\nnpm install ctags\n```\n\n## Building\n  * Clone the repository\n  * Run `npm install`\n  * Run `grunt` to compile the native and CoffeeScript code\n  * Run `grunt test` to run the specs\n\n## Documentation\n\n### findTags(tagsFilePath, tag, [options], callback)\n\nGet all tags matching the tag specified from the tags file at the path.\n\n* `tagsFilePath` - The string path to the tags file.\n\n* `tag` - The string name of the tag to search for.\n\n* `options` - An optional options object containing the following keys:\n\n  * `caseInsensitive` - `true` to include tags that match case insensitively,\n    (default: `false`)\n  * `partialMatch` - `true` to include tags that partially match the given tag\n    (default: `false`)\n\n* `callback` - The function to call when complete with an error as the first\n             argument and an array containing objects that have `name` and\n             `file` keys and optionally a `pattern` key if the tag file\n             specified contains tag patterns.\n\n#### Example\n\n```coffeescript\nctags = require 'ctags'\n\nctags.findTags('/Users/me/repos/node/tags', 'exists', (error, tags=[]) ->\n  for tag in tags\n    console.log(\"#{tag.name} is in #{tag.file}\")\n```\n\n### createReadStream(tagsFilePath, [options])\n\nCreate a read stream to a tags file.\n\nThe stream returned will emit `data` events with arrays of tag objects\nthat have `name` and `file` keys and optionally a `pattern` key if the tag file\nspecified contains tag patterns.\n\nAn `error` event will be emitted if the tag file cannot be read.\n\nAn `end` event will be emitted when all the tags have been read.\n\n* `tagsFilePath` - The string path to the tags file.\n\n* `options` - An optional object containing the following keys.\n\n  * `chunkSize` - The number of tags to read at a time (default: `100`).\n\nReturns a stream.\n#### Example\n\n```coffeescript\nctags = require 'ctags'\n\nstream = ctags.createReadStream('/Users/me/repos/node/tags')\nstream.on 'data', (tags) ->\n  for tag in tags\n    console.log(\"#{tag.name} is in #{tag.file} with pattern: #{tag.pattern}\")\n```\n",
  "readmeFilename": "README.md",
  "_id": "ctags@0.10.0",
  "dist": {
    "shasum": "32207991a9912c0e3adcd01dbf89ab930cf73c95"
  },
  "_from": "ctags@~0.10.0",
  "_resolved": "https://registry.npmjs.org/ctags/-/ctags-0.10.0.tgz"
}
